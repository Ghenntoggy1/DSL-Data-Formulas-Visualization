# Generated from D:/Programming/Projects/DSL/DSL_Data_Formulas_Visualization/Grammar/DSL_Data_Formulas_Visualization_Grammar.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,49,396,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,
        1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,
        1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,
        1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,
        1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,
        1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,
        1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,
        1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,
        1,15,1,15,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,18,1,18,1,18,
        1,18,1,18,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,21,
        1,21,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,
        1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,4,26,
        272,8,26,11,26,12,26,273,1,26,5,26,277,8,26,10,26,12,26,280,9,26,
        1,27,1,27,4,27,284,8,27,11,27,12,27,285,1,27,1,27,1,28,1,28,1,28,
        1,28,5,28,294,8,28,10,28,12,28,297,9,28,1,28,1,28,1,28,1,29,1,29,
        5,29,304,8,29,10,29,12,29,307,9,29,1,30,1,30,1,30,1,30,1,30,1,30,
        1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,4,30,324,8,30,11,30,
        12,30,325,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,
        1,35,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,
        1,37,1,37,1,37,1,37,1,37,1,37,3,37,358,8,37,1,38,3,38,361,8,38,1,
        38,4,38,364,8,38,11,38,12,38,365,1,39,1,39,1,40,4,40,371,8,40,11,
        40,12,40,372,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,
        44,1,44,1,45,1,45,1,45,1,46,1,46,1,46,1,47,1,47,1,48,1,48,1,295,
        0,49,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
        13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,
        24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,
        35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,
        46,93,47,95,48,97,49,1,0,8,4,0,47,47,65,90,95,95,97,122,4,0,47,57,
        65,90,95,95,97,122,4,0,46,57,65,90,95,95,97,122,2,0,10,10,13,13,
        2,0,42,42,94,94,2,0,43,43,45,45,1,0,48,57,3,0,9,10,13,13,32,32,414,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
        1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,
        1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
        1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,
        1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
        1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
        1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,
        1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,1,99,1,0,0,0,3,104,
        1,0,0,0,5,112,1,0,0,0,7,120,1,0,0,0,9,125,1,0,0,0,11,131,1,0,0,0,
        13,134,1,0,0,0,15,139,1,0,0,0,17,145,1,0,0,0,19,151,1,0,0,0,21,155,
        1,0,0,0,23,164,1,0,0,0,25,177,1,0,0,0,27,191,1,0,0,0,29,205,1,0,
        0,0,31,216,1,0,0,0,33,222,1,0,0,0,35,226,1,0,0,0,37,230,1,0,0,0,
        39,235,1,0,0,0,41,239,1,0,0,0,43,243,1,0,0,0,45,247,1,0,0,0,47,251,
        1,0,0,0,49,256,1,0,0,0,51,262,1,0,0,0,53,271,1,0,0,0,55,281,1,0,
        0,0,57,289,1,0,0,0,59,301,1,0,0,0,61,308,1,0,0,0,63,329,1,0,0,0,
        65,331,1,0,0,0,67,333,1,0,0,0,69,335,1,0,0,0,71,337,1,0,0,0,73,339,
        1,0,0,0,75,357,1,0,0,0,77,360,1,0,0,0,79,367,1,0,0,0,81,370,1,0,
        0,0,83,376,1,0,0,0,85,379,1,0,0,0,87,382,1,0,0,0,89,384,1,0,0,0,
        91,386,1,0,0,0,93,389,1,0,0,0,95,392,1,0,0,0,97,394,1,0,0,0,99,100,
        5,68,0,0,100,101,5,97,0,0,101,102,5,116,0,0,102,103,5,97,0,0,103,
        2,1,0,0,0,104,105,5,70,0,0,105,106,5,111,0,0,106,107,5,114,0,0,107,
        108,5,109,0,0,108,109,5,117,0,0,109,110,5,108,0,0,110,111,5,97,0,
        0,111,4,1,0,0,0,112,113,5,100,0,0,113,114,5,97,0,0,114,115,5,116,
        0,0,115,116,5,97,0,0,116,117,5,115,0,0,117,118,5,101,0,0,118,119,
        5,116,0,0,119,6,1,0,0,0,120,121,5,110,0,0,121,122,5,97,0,0,122,123,
        5,109,0,0,123,124,5,101,0,0,124,8,1,0,0,0,125,126,5,114,0,0,126,
        127,5,97,0,0,127,128,5,110,0,0,128,129,5,103,0,0,129,130,5,101,0,
        0,130,10,1,0,0,0,131,132,5,105,0,0,132,133,5,102,0,0,133,12,1,0,
        0,0,134,135,5,101,0,0,135,136,5,108,0,0,136,137,5,115,0,0,137,138,
        5,101,0,0,138,14,1,0,0,0,139,140,5,119,0,0,140,141,5,104,0,0,141,
        142,5,105,0,0,142,143,5,108,0,0,143,144,5,101,0,0,144,16,1,0,0,0,
        145,146,5,83,0,0,146,147,5,116,0,0,147,148,5,97,0,0,148,149,5,114,
        0,0,149,150,5,116,0,0,150,18,1,0,0,0,151,152,5,69,0,0,152,153,5,
        110,0,0,153,154,5,100,0,0,154,20,1,0,0,0,155,156,5,82,0,0,156,157,
        5,101,0,0,157,158,5,97,0,0,158,159,5,100,0,0,159,160,5,70,0,0,160,
        161,5,114,0,0,161,162,5,111,0,0,162,163,5,109,0,0,163,22,1,0,0,0,
        164,165,5,69,0,0,165,166,5,120,0,0,166,167,5,112,0,0,167,168,5,111,
        0,0,168,169,5,114,0,0,169,170,5,116,0,0,170,171,5,84,0,0,171,172,
        5,111,0,0,172,173,5,70,0,0,173,174,5,105,0,0,174,175,5,108,0,0,175,
        176,5,101,0,0,176,24,1,0,0,0,177,178,5,69,0,0,178,179,5,120,0,0,
        179,180,5,112,0,0,180,181,5,111,0,0,181,182,5,114,0,0,182,183,5,
        116,0,0,183,184,5,84,0,0,184,185,5,111,0,0,185,186,5,73,0,0,186,
        187,5,109,0,0,187,188,5,97,0,0,188,189,5,103,0,0,189,190,5,101,0,
        0,190,26,1,0,0,0,191,192,5,86,0,0,192,193,5,105,0,0,193,194,5,115,
        0,0,194,195,5,117,0,0,195,196,5,97,0,0,196,197,5,108,0,0,197,198,
        5,70,0,0,198,199,5,111,0,0,199,200,5,114,0,0,200,201,5,109,0,0,201,
        202,5,117,0,0,202,203,5,108,0,0,203,204,5,97,0,0,204,28,1,0,0,0,
        205,206,5,86,0,0,206,207,5,105,0,0,207,208,5,115,0,0,208,209,5,117,
        0,0,209,210,5,97,0,0,210,211,5,108,0,0,211,212,5,68,0,0,212,213,
        5,97,0,0,213,214,5,116,0,0,214,215,5,97,0,0,215,30,1,0,0,0,216,217,
        5,103,0,0,217,218,5,114,0,0,218,219,5,97,0,0,219,220,5,112,0,0,220,
        221,5,104,0,0,221,32,1,0,0,0,222,223,5,98,0,0,223,224,5,97,0,0,224,
        225,5,114,0,0,225,34,1,0,0,0,226,227,5,112,0,0,227,228,5,105,0,0,
        228,229,5,101,0,0,229,36,1,0,0,0,230,231,5,104,0,0,231,232,5,105,
        0,0,232,233,5,115,0,0,233,234,5,116,0,0,234,38,1,0,0,0,235,236,5,
        112,0,0,236,237,5,110,0,0,237,238,5,103,0,0,238,40,1,0,0,0,239,240,
        5,106,0,0,240,241,5,112,0,0,241,242,5,103,0,0,242,42,1,0,0,0,243,
        244,5,99,0,0,244,245,5,115,0,0,245,246,5,118,0,0,246,44,1,0,0,0,
        247,248,5,116,0,0,248,249,5,120,0,0,249,250,5,116,0,0,250,46,1,0,
        0,0,251,252,5,106,0,0,252,253,5,115,0,0,253,254,5,111,0,0,254,255,
        5,110,0,0,255,48,1,0,0,0,256,257,5,101,0,0,257,258,5,120,0,0,258,
        259,5,99,0,0,259,260,5,101,0,0,260,261,5,108,0,0,261,50,1,0,0,0,
        262,263,5,99,0,0,263,264,5,111,0,0,264,265,5,110,0,0,265,266,5,115,
        0,0,266,267,5,111,0,0,267,268,5,108,0,0,268,269,5,101,0,0,269,52,
        1,0,0,0,270,272,7,0,0,0,271,270,1,0,0,0,272,273,1,0,0,0,273,271,
        1,0,0,0,273,274,1,0,0,0,274,278,1,0,0,0,275,277,7,1,0,0,276,275,
        1,0,0,0,277,280,1,0,0,0,278,276,1,0,0,0,278,279,1,0,0,0,279,54,1,
        0,0,0,280,278,1,0,0,0,281,283,5,34,0,0,282,284,7,2,0,0,283,282,1,
        0,0,0,284,285,1,0,0,0,285,283,1,0,0,0,285,286,1,0,0,0,286,287,1,
        0,0,0,287,288,5,34,0,0,288,56,1,0,0,0,289,290,5,47,0,0,290,291,5,
        42,0,0,291,295,1,0,0,0,292,294,9,0,0,0,293,292,1,0,0,0,294,297,1,
        0,0,0,295,296,1,0,0,0,295,293,1,0,0,0,296,298,1,0,0,0,297,295,1,
        0,0,0,298,299,5,42,0,0,299,300,5,47,0,0,300,58,1,0,0,0,301,305,5,
        35,0,0,302,304,8,3,0,0,303,302,1,0,0,0,304,307,1,0,0,0,305,303,1,
        0,0,0,305,306,1,0,0,0,306,60,1,0,0,0,307,305,1,0,0,0,308,309,5,102,
        0,0,309,310,5,111,0,0,310,311,5,114,0,0,311,312,5,109,0,0,312,313,
        5,117,0,0,313,314,5,108,0,0,314,315,5,97,0,0,315,316,5,91,0,0,316,
        323,1,0,0,0,317,324,3,53,26,0,318,324,3,75,37,0,319,324,3,69,34,
        0,320,324,3,71,35,0,321,324,3,77,38,0,322,324,3,81,40,0,323,317,
        1,0,0,0,323,318,1,0,0,0,323,319,1,0,0,0,323,320,1,0,0,0,323,321,
        1,0,0,0,323,322,1,0,0,0,324,325,1,0,0,0,325,323,1,0,0,0,325,326,
        1,0,0,0,326,327,1,0,0,0,327,328,5,93,0,0,328,62,1,0,0,0,329,330,
        5,59,0,0,330,64,1,0,0,0,331,332,5,58,0,0,332,66,1,0,0,0,333,334,
        5,44,0,0,334,68,1,0,0,0,335,336,5,40,0,0,336,70,1,0,0,0,337,338,
        5,41,0,0,338,72,1,0,0,0,339,340,5,61,0,0,340,74,1,0,0,0,341,358,
        7,4,0,0,342,343,5,108,0,0,343,344,5,111,0,0,344,358,5,103,0,0,345,
        346,5,115,0,0,346,347,5,113,0,0,347,358,5,114,0,0,348,349,5,115,
        0,0,349,350,5,113,0,0,350,351,5,114,0,0,351,358,5,116,0,0,352,353,
        5,102,0,0,353,354,5,97,0,0,354,355,5,99,0,0,355,358,5,116,0,0,356,
        358,7,5,0,0,357,341,1,0,0,0,357,342,1,0,0,0,357,345,1,0,0,0,357,
        348,1,0,0,0,357,352,1,0,0,0,357,356,1,0,0,0,358,76,1,0,0,0,359,361,
        5,45,0,0,360,359,1,0,0,0,360,361,1,0,0,0,361,363,1,0,0,0,362,364,
        7,6,0,0,363,362,1,0,0,0,364,365,1,0,0,0,365,363,1,0,0,0,365,366,
        1,0,0,0,366,78,1,0,0,0,367,368,5,46,0,0,368,80,1,0,0,0,369,371,7,
        7,0,0,370,369,1,0,0,0,371,372,1,0,0,0,372,370,1,0,0,0,372,373,1,
        0,0,0,373,374,1,0,0,0,374,375,6,40,0,0,375,82,1,0,0,0,376,377,5,
        61,0,0,377,378,5,61,0,0,378,84,1,0,0,0,379,380,5,33,0,0,380,381,
        5,61,0,0,381,86,1,0,0,0,382,383,5,62,0,0,383,88,1,0,0,0,384,385,
        5,60,0,0,385,90,1,0,0,0,386,387,5,62,0,0,387,388,5,61,0,0,388,92,
        1,0,0,0,389,390,5,60,0,0,390,391,5,61,0,0,391,94,1,0,0,0,392,393,
        5,123,0,0,393,96,1,0,0,0,394,395,5,125,0,0,395,98,1,0,0,0,12,0,273,
        278,285,295,305,323,325,357,360,365,372,1,6,0,0
    ]

class DSL_Data_Formulas_Visualization_GrammarLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    START = 9
    END = 10
    READ_FROM = 11
    EXPORT_TO_FILE = 12
    EXPORT_TO_IMAGE = 13
    VISUAL_FORMULA = 14
    VISUAL_DATA = 15
    GRAPH = 16
    BAR = 17
    PIE = 18
    HIST = 19
    PNG = 20
    JPG = 21
    CSV = 22
    TEXT = 23
    JSON = 24
    EXCEL = 25
    CONSOLE = 26
    ID = 27
    PATH = 28
    COMMENT_BLOCK = 29
    COMMENT_LINE = 30
    FORMULA = 31
    SEMICOLON = 32
    COLON = 33
    COMMA = 34
    LPAREN = 35
    RPAREN = 36
    ASSIGN = 37
    OPERATORS = 38
    DIGIT = 39
    DOT = 40
    WS = 41
    EQUAL = 42
    NOT_EQUAL = 43
    GREATER = 44
    LESS = 45
    GREATER_EQUAL = 46
    LESS_EQUAL = 47
    LBRACE = 48
    RBRACE = 49

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'Data'", "'Formula'", "'dataset'", "'name'", "'range'", "'if'", 
            "'else'", "'while'", "'Start'", "'End'", "'ReadFrom'", "'ExportToFile'", 
            "'ExportToImage'", "'VisualFormula'", "'VisualData'", "'graph'", 
            "'bar'", "'pie'", "'hist'", "'png'", "'jpg'", "'csv'", "'txt'", 
            "'json'", "'excel'", "'console'", "';'", "':'", "','", "'('", 
            "')'", "'='", "'.'", "'=='", "'!='", "'>'", "'<'", "'>='", "'<='", 
            "'{'", "'}'" ]

    symbolicNames = [ "<INVALID>",
            "START", "END", "READ_FROM", "EXPORT_TO_FILE", "EXPORT_TO_IMAGE", 
            "VISUAL_FORMULA", "VISUAL_DATA", "GRAPH", "BAR", "PIE", "HIST", 
            "PNG", "JPG", "CSV", "TEXT", "JSON", "EXCEL", "CONSOLE", "ID", 
            "PATH", "COMMENT_BLOCK", "COMMENT_LINE", "FORMULA", "SEMICOLON", 
            "COLON", "COMMA", "LPAREN", "RPAREN", "ASSIGN", "OPERATORS", 
            "DIGIT", "DOT", "WS", "EQUAL", "NOT_EQUAL", "GREATER", "LESS", 
            "GREATER_EQUAL", "LESS_EQUAL", "LBRACE", "RBRACE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "START", "END", "READ_FROM", "EXPORT_TO_FILE", 
                  "EXPORT_TO_IMAGE", "VISUAL_FORMULA", "VISUAL_DATA", "GRAPH", 
                  "BAR", "PIE", "HIST", "PNG", "JPG", "CSV", "TEXT", "JSON", 
                  "EXCEL", "CONSOLE", "ID", "PATH", "COMMENT_BLOCK", "COMMENT_LINE", 
                  "FORMULA", "SEMICOLON", "COLON", "COMMA", "LPAREN", "RPAREN", 
                  "ASSIGN", "OPERATORS", "DIGIT", "DOT", "WS", "EQUAL", 
                  "NOT_EQUAL", "GREATER", "LESS", "GREATER_EQUAL", "LESS_EQUAL", 
                  "LBRACE", "RBRACE" ]

    grammarFileName = "DSL_Data_Formulas_Visualization_Grammar.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


